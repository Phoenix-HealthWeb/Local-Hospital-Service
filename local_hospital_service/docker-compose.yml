services:
    rabbitmq:
        container_name: rabbitmq-local-hospital
        # A hostname is needed for two purpouses:
        #   to connect to the RabbitMQ server from the Phoenix app
        #   to persist data in the volumes, since files are writted in subfolders rabbit@<hostname>
        hostname: rabbitmq-host
        image: rabbitmq:management
        restart: unless-stopped
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
            - rabbitmq-log:/var/log/rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
        ports:
            - "5672:5672"
            - "15672:15672"
        # Rabbit takes some time to start, so we need to wait for it
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            start_period: 2s
            interval: 10s
            timeout: 5s
            retries: 5

    phoenix:
        container_name: phoenix-app-local-hospital
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - sqlite-data:/etc/local_hospital_service
        environment:
            - DATABASE_PATH=${DATABASE_PATH}
            - SECRET_KEY_BASE=${SECRET_KEY_BASE}
            - PHX_HOST=${PHX_HOST}
            - PORT=${PHX_PORT}
            - FORCE_MIGRATIONS=true
            - NDB_URL=${NDB_URL}
            # When using compose, rabbitm can't be accessed by localhost, so another variable is needed
            - RABBITMQ_URL=${RABBITMQ_URL_COMPOSE}
            - NDB_API_KEY=${NDB_API_KEY}
        ports:
            - "${PHX_PORT}:${PHX_PORT}"
        depends_on:
            rabbitmq:
                condition: service_healthy
        restart: unless-stopped

volumes:
    sqlite-data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ./volumes/sqlite-data
    rabbitmq-data: {}
    rabbitmq-log: {}
